name: Publish Docker image
on: [push]
 
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: kek22d222ssd
        release_name: kek22222dssdd
        draft: false
        prerelease: false
    - 
        name: Checkout repo
        uses: actions/checkout@v2
    -
        name: coompress sources
        run: tar -czvf /home/runner/source.tar.gz /home/runner/work/docker/docker 
    -
      name: debug
      run: ls ~/ && pwd
    
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/source.tar.gz
        asset_name: source.tar.gz
        asset_content_type: application/zip

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}


# name: Publish Docker image
# on: 
#   workflow_dispatch:
#     inputs:
#       logLevel:
#         description: 'Log level'     
#         required: true
#         default: 'warning'
#       tags:
#         description: 'Test scenario tags'  
# jobs:
#   push_to_registry:
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#       - name: Push to Docker Hub
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_ID }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}
#           repository: kamilmachonhsrn/test
#           tag_with_ref: true
#   hello_world_job:
#     runs-on: ubuntu-latest
#     name: A job to say hello
#     steps:
#     - name: Hello world action step
#       id: hello
#       uses:  kamilmachon/docker/custom_action@v1
#       with:
#         who-to-greet: 'Mona the Octocat'
#     # Use the output from the `hello` step
#     - name: Get the output time
#       run: echo "The time was ${{ steps.hello.outputs.time }}"
